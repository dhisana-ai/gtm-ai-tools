version: '3'

vars:
  IMAGE: gtm-ai-tools

silent: false

tasks:
  git:pull:
    cmds:
      - git pull

  docker:build:
    cmds:
      - docker build -t {{.IMAGE}} .

  run:command:
    desc: Run a utility inside the Docker image and capture output
    cmds:
      - mkdir -p output
      - |
        set -e
        set -- {{.CLI_ARGS}}
        cmd="$1"
        shift
        echo Running: docker run --env-file .env -v $(pwd)/output:/workspace {{.IMAGE}} python -m utils.${cmd} "$@"
        docker run --env-file .env -v $(pwd)/output:/workspace {{.IMAGE}} python -m utils.${cmd} "$@" 2>&1 | tee output/run.log
      - mkdir -p /tmp/outputs
      - cp -a output/* /tmp/outputs/ 2>/dev/null || true

  run:command_local_mapping:
    desc: Run a utility with local path mapping
    cmds:
      - mkdir -p output
      - |
        set -e
        set -- {{.CLI_ARGS}}
        input_path_prefix="$1"
        cmd="$2"
        shift 2
        echo Running: docker run --env-file .env -v ${input_path_prefix}:${input_path_prefix} -v $(pwd)/output:/workspace {{.IMAGE}} python -m utils.${cmd} "$@"
        docker run --env-file .env -v ${input_path_prefix}:${input_path_prefix} -v $(pwd)/output:/workspace {{.IMAGE}} python -m utils.${cmd} "$@" 2>&1 | tee output/run.log
      - mkdir -p /tmp/outputs
      - cp -a output/* /tmp/outputs/ 2>/dev/null || true

  add_utility:
    desc: Generate a new utility using the Codex CLI
    cmds:
      - |
        set -e
        set -- {{.CLI_ARGS}}
        name="$1"
        shift
        if [ -z "$name" ] || [ $# -eq 0 ]; then
          echo "Usage: task add_utility <name> <instructions>" >&2
          exit 1
        fi
        codex-auto "create a utils/${name}.py with the following instructions. add it to app, docs and tools like other tools: $*"

